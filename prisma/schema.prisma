generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  id       String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name     String?    @db.VarChar(100)
  type     String?    @db.VarChar(50)
  products products[]
}

model customers {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  name     String?  @db.VarChar(255)
  email    String?  @db.VarChar(120)
  address  String?  @db.VarChar(255)
  cpf      String   @db.VarChar(255)
  birthday DateTime
  orders   orders[]
}

model deliveries {
  id     String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type   String?  @db.VarChar(25)
  status String?  @db.VarChar(40)
  orders orders[]
}

model order_products {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  productId String    @map("product_id") @db.Uuid
  orderId   String    @map("order_id") @db.Uuid
  quantity  Int       @default(1)
  createdAt DateTime? @default(now()) @map("created_at") @db.Date
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Date
  deletedAt DateTime? @map("deleted_at") @db.Date
  orders    orders    @relation(fields: [orderId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products  products  @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  deliveryId     String?          @map("delivery_id") @db.Uuid
  customerId     String?          @map("customer_id") @db.Uuid
  createdAt      DateTime?        @default(now()) @map("created_at") @db.Date
  updatedAt      DateTime?        @default(now()) @map("updated_at") @db.Date
  deletedAt      DateTime?        @map("deleted_at") @db.Date
  order_products order_products[]
  customers      customers?       @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  deliveries     deliveries?      @relation(fields: [deliveryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model products {
  id              String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String           @db.VarChar(255)
  categoryId      String           @default(dbgenerated("gen_random_uuid()")) @map("category_id") @db.Uuid
  unitPriceInBRL  Decimal          @map("unit_price_in_brl") @db.Decimal(10, 2)
  quantityInStock Int              @default(0) @map("quantity_in_stock")
  order_products  order_products[]
  category        categories?      @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
