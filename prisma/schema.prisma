generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  id       String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name     String?    @db.VarChar(100)
  type     String?    @db.VarChar(50)
  products products[]
}

model customers {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  name    String?  @db.VarChar(255)
  email   String?  @db.VarChar(120)
  address String?  @db.VarChar(255)
  cpf String  @db.VarChar(255)
  birthday DateTime
  orders  orders[]
}

model deliveries {
  id     String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type   String?  @db.VarChar(25)
  status String?  @db.VarChar(40)
  orders orders[]
}

model order_products {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  productId String    @db.Uuid @map("product_id")
  orderId    String    @db.Uuid @map("order_id")
  quantity   Int      @default(1)
  createdAt DateTime? @default(now()) @db.Date @map("created_at")
  updatedAt  DateTime? @default(now()) @db.Date @map("updated_at")
  deletedAt DateTime? @db.Date @map("deleted_at")
  orders     orders    @relation(fields: [orderId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products   products  @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  delivery_id    String?          @db.Uuid
  customer_id    String?          @db.Uuid
  created_at     DateTime?        @default(now()) @db.Date
  updated_at     DateTime?        @default(now()) @db.Date
  deleted_at     DateTime?        @db.Date
  order_products order_products[]
  customers      customers?       @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  deliveries     deliveries?      @relation(fields: [delivery_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model products {
  id                String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String          @db.VarChar(255)
  categoryId       String          @default(dbgenerated("gen_random_uuid()")) @db.Uuid @map("category_id")
  unitPriceInBRL Decimal         @db.Decimal(10, 2) @map("unit_price_in_brl")
  quantityInStock Int @default(0)  @map("quantity_in_stock")
  order_products    order_products[]
  category        categories?      @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
